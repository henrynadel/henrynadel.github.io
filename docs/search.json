[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Me",
    "section": "",
    "text": "Hi! My name is Henry Nadel. I am currently in my final year at Pitzer College where I study Environmental Analysis on a public policy track with an additional minor in Data Science. I am particularly interested in using data to inform public policy along with using graphing and GIS software to convey data in an accessible manner. When I’m not in the classroom I can usually be found outside running, climbing, or exploring one of California’s amazing parks.\nCurrently: Senior at Pitzer College\nMajor: Environmental Analysis; Minor: Data Science\nBased in: Claremont, CA\nOriginally from: Newton, MA"
  },
  {
    "objectID": "tidytuesday-1.html",
    "href": "tidytuesday-1.html",
    "title": "TidyTuesday - Himalayan Mountaineering",
    "section": "",
    "text": "The following calculations are made based off of a data set from the Himalayan Database which keeps information on peaks and mountaineering expeditions that take place in the Himalayan Region.\nThe following graph attempts to compare the volume of expeditions per region listed in the data on all mountains exceeding 7,000 meters. This is done by joining the “peaks” and “expeditions” data sets, filtering for only peaks above 7,000m, and then counting the expeditions by region.\n\n# joining\nexped_tidy &lt;- exped_tidy |&gt; mutate(PEAKID = as.character(PEAKID))\npeaks_tidy &lt;- peaks_tidy |&gt; mutate(PEAKID = as.character(PEAKID))\n\n# count expeditions for peaks &gt;= 7000m \nexped_by_region &lt;- exped_tidy |&gt;\n  distinct(EXPID, PEAKID) |&gt;  \n  inner_join(\n    peaks_tidy |&gt; select(PEAKID, HEIGHTM, REGION_FACTOR),\n    by = \"PEAKID\"\n  ) |&gt;\n  filter(HEIGHTM &gt;= 7000) |&gt;\n  count(REGION_FACTOR, name = \"n_expeditions\") |&gt;\n  arrange(desc(n_expeditions))\n\nexped_by_region\n\n# A tibble: 6 × 2\n  REGION_FACTOR           n_expeditions\n  &lt;chr&gt;                           &lt;int&gt;\n1 Khumbu-Rolwaling-Makalu           356\n2 Manaslu-Ganesh                     96\n3 Annapurna-Damodar-Peri             90\n4 Dhaulagiri-Mukut                   45\n5 Kangchenjunga-Janak                28\n6 Langtang-Jugal                      2\n\n\n\n# ---- plot ----\nggplot(exped_by_region,\n       aes(x = forcats::fct_reorder(REGION_FACTOR, n_expeditions),\n           y = n_expeditions)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(\n    title = \"Number of Expeditions on ≥7000 m Peaks, by Region\",\n    subtitle = \"Himalayan Database (TidyTuesday 2025-01-21)\",\n    x = \"Region\",\n    y = \"Number of expeditions\"\n  ) +\n  theme_minimal(base_size = 12)"
  },
  {
    "objectID": "tidytuesday-2.html",
    "href": "tidytuesday-2.html",
    "title": "TidyTuesday - Gas Pricing",
    "section": "",
    "text": "The following data was provided by TidyTuesday and is sourced from the U.S. Energy Information Administration (EIA), which publishes average retail gasoline and diesel prices each Monday. The original data (including additional datasets) can be found at eia.gov/petroleum/gasdiesel\nThe following code averages out weekly reports to create average annual gasoline prices. Then, the data is graphed to create a visual display of the change in American gas pricing over time.\n\n# yearly average gasoline price\ngas_yearly &lt;- weekly_gas_prices |&gt;\n  filter(fuel == \"gasoline\", grade == \"all\", formulation == \"all\") |&gt;\n  mutate(year = year(date)) |&gt;\n  group_by(year) |&gt;\n  summarise(avg_price = mean(price, na.rm = TRUE), .groups = \"drop\") |&gt;\n  arrange(year)\n\nprint(gas_yearly, n = Inf)\n\n# A tibble: 33 × 2\n    year avg_price\n   &lt;dbl&gt;     &lt;dbl&gt;\n 1  1993      1.07\n 2  1994      1.08\n 3  1995      1.16\n 4  1996      1.24\n 5  1997      1.24\n 6  1998      1.07\n 7  1999      1.18\n 8  2000      1.52\n 9  2001      1.46\n10  2002      1.39\n11  2003      1.60\n12  2004      1.89\n13  2005      2.31\n14  2006      2.62\n15  2007      2.84\n16  2008      3.30\n17  2009      2.41\n18  2010      2.84\n19  2011      3.58\n20  2012      3.68\n21  2013      3.58\n22  2014      3.44\n23  2015      2.52\n24  2016      2.25\n25  2017      2.53\n26  2018      2.81\n27  2019      2.69\n28  2020      2.26\n29  2021      3.10\n30  2022      4.06\n31  2023      3.63\n32  2024      3.42\n33  2025      3.25\n\n\n\n# Plot\nggplot(gas_yearly, aes(x = year, y = avg_price, group = 1)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    title = \"Average U.S. Gasoline Price by Year\",\n    x = \"Year\",\n    y = \"Average price (USD/gal)\"\n  ) +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  scale_x_continuous(breaks = scales::pretty_breaks()) +\n  theme_minimal(base_size = 12)"
  }
]